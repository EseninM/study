package main

import (
	"fmt"
)

// Функция для нахождения общих делителей для массива положительных целых чисел
func общиеДелители(числа []int) []int {
	// Начинаем с предположения, что все числа имеют общие делители
	// Начинаем с проверки наименьшего числа в массиве
	наименьшее := наименьшееЧисло(числа)
	общиеДелители := делители(наименьшее)

	// Перебираем все числа и проверяем их делители
	for _, число := range числа {
		// Находим общие делители между текущим числом и уже найденными общими делителями
		общиеДелители = пересечениеМассивов(общиеДелители, делители(число))
	}

	return общиеДелители
}

// Функция для нахождения наименьшего числа в массиве
func наименьшееЧисло(числа []int) int {
	наименьшее := числа[0]
	for _, число := range числа {
		if число < наименьшее {
			наименьшее = число
		}
	}
	return наименьшее
}

// Функция для нахождения делителей числа
func делители(число int) []int {
	делители := []int{}
	for i := 1; i <= число; i++ {
		if число%i == 0 {
			делители = append(делители, i)
		}
	}
	return делители
}

// Функция для нахождения пересечения двух массивов
func пересечениеМассивов(arr1, arr2 []int) []int {
	пересечение := []int{}
	мап := make(map[int]bool)

	for _, элемент := range arr1 {
		мап[элемент] = true
	}

	for _, элемент := range arr2 {
		if _, существует := мап[элемент]; существует {
			пересечение = append(пересечение, элемент)
		}
	}

	return пересечение
}

func main() {
	числа := []int{42, 12, 18}
	fmt.Println("Общие делители:", общиеДелители(числа)) // Вывод: [1 2 3 6]
}
